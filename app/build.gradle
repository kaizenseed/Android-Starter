apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "com.example.androidstarter"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //android support
    implementation "com.android.support:appcompat-v7:$rootProject.supportVersion"
    implementation "com.android.support:design:$rootProject.supportVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"

    //android architecture components
    // https://developer.android.com/topic/libraries/architecture/adding-components.html
    // Lifecycle arch : ViewModel + LiveData
    implementation "android.arch.lifecycle:extensions:$rootProject.archVersion"
    // Java8 support for Lifecycle instead of lifecycle.compiler
    implementation "android.arch.lifecycle:common-java8:$rootProject.archVersion"
    //annotationProcessor "android.arch.lifecycle:compiler:$rootProject.archVersion"

    // Room
    implementation "android.arch.persistence.room:runtime:$rootProject.archVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.archVersion"

    //ToNote - paging, test helpers for LiveData & Room also available. Add when needed
    //ToNote - RoomRxJava & LiveData ReactiveStreams support available separately.
    //ToNote - Add when needed along with RxJava & RxAndroid

    // Timber
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // ButterKnife
    implementation "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeVersion"

    //ThreeTenABP for backported compatibility with Java8 Date & Time
    implementation "com.jakewharton.threetenabp:threetenabp:$rootProject.threeTenAbpVersion"

    //Retrofit for REST api calls
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.retrofit2:retrofit-mock:2.3.0' //for mocking retrofit calls

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
